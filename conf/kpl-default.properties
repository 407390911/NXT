################################################################################
# Copyright © 2013-2016 The Kpl Core Developers.                               #
# Copyright © 2016-2017 Jelurida IP B.V.                                       #
#                                                                              #
# See the LICENSE.txt file at the top-level directory of this distribution     #
# for licensing information.                                                   #
#                                                                              #
# Unless otherwise agreed in a custom licensing agreement with Jelurida B.V.,  #
# no part of the Kpl software, including this file, may be copied, modified,   #
# propagated, or distributed except according to the terms contained in the    #
# LICENSE.txt file.                                                            #
#                                                                              #
# Removal or modification of this copyright notice is prohibited.              #
#                                                                              #
################################################################################

# Do not modify this file. Instead, create a kpl.properties file with only the
# properties you need to change, and set them there. The values in 
# kpl.properties override those in kpl-default.properties.



#### SYSTEM ####

# Set the socks proxy host.
#socksProxyHost=localhost

# Set the socks proxy port.
#socksProxyPort=9050



#### PEER NETWORKING ####

# Announce my IP address/hostname to peers and allow them to share it with other
# peers. If disabled, peer networking servlet will not be started at all.
kpl.shareMyAddress=true

# Port for incoming peer to peer networking requests, if enabled.
kpl.peerServerPort=7874

# Enable UPnP for the peer port.
kpl.enablePeerUPnP=true

# UPnP gateway http read timeout, milliseconds. Set to -1 to disable.
# Default 7000 if not set.
#kpl.upnpGatewayTimeout=7000

# UPnP gateway socket connection timeout, milliseconds. Set to -1 to disable.
# Default 3000 if not set.
#kpl.upnpDiscoverTimeout=3000

# Host interface on which to listen for peer networking requests, default all.
# Use 0.0.0.0 to listen on all interfaces, including IPv6.
kpl.peerServerHost=0.0.0.0

# My externally visible IP address or host name, to be announced to peers.
# It can optionally include a port number, which will also be announced to
# peers, and may be different from kpl.peerServerPort (useful if you do port
# forwarding behind a router).
kpl.myAddress=

# My platform, to be announced to peers.
kpl.myPlatform=

# My hallmark, if available.
kpl.myHallmark=

# Default initial peers. Only used if kpl.usePeersDb=true.
# Do not modify. Add custom peers to kpl.wellKnownPeers instead.
kpl.defaultPeers=kpl.zuqka.info; 217.61.123.118; 193.151.106.129; \
  52.233.152.241; squidgle.hopto.org; 167.114.233.211; 212.71.244.47; \
  23.239.24.198; 108.6.22.189; 217.61.123.14; 156.56.111.143; 81.151.82.22; \
  35.158.179.254; 163.172.163.4; ec2-52-91-75-163.compute-1.amazonaws.com; \
  70.233.129.99; 67.84.22.18; 217.61.123.226; 180.212.250.137; \
  195.181.214.45; kpl2.utut.org; 188.226.179.119; 195.181.221.162; \
  195.181.212.231; kpl7.y.cz; 13.93.127.183; kplx.ru; 96.42.188.21; \
  173.173.57.33; albefero02.ddns.net; 52.166.62.217; 195.181.212.99; \
  37.48.73.249; 185.33.146.244; 104.197.157.140; 104.223.53.14; \
  174.140.167.239; 13.95.217.25; 98.144.48.144; 37.59.57.141; 78.47.35.210; \
  kpl.utila.nl; kplnode002.ddnss.eu; sd-94855.dedibox.fr; strat.hd.free.fr; \
  195.181.214.46; 94.177.199.41; 158.69.5.164; 94.177.234.11; 178.209.194.4; \
  104.207.133.204; kpl3.y.cz; 81.243.91.89; 47.36.138.25; bargu.szn.dk; \
  gtwins2.f3322.net; 84.27.76.121; 72.82.151.130; kplnode004.ddnss.eu; \
  112.170.8.183; 163.172.68.112; 72.205.223.137; 195.181.209.164; \
  92.222.87.172; 24.60.23.196; 185.33.145.12; 98.166.19.68; 94.177.214.200; \
  180.150.28.124; 85.255.0.176; 195.181.214.215; 40.68.201.133; \
  163.172.160.91; 220.134.112.220; tutnix.mooo.com; 70.162.42.138; \
  81.2.254.116; 104.47.147.190; 92.251.70.235; 47.89.19.199; 198.71.84.173; \
  163.172.161.7; 195.181.214.68; home.kaerner.net; 73.97.38.36; \
  78.205.199.21; 130.211.109.127; 87.211.253.28; 35.184.21.157; \
  52.232.127.193; 87.138.143.21; 181.21.99.219; 87.81.173.128; 73.73.125.24; \
  113.58.155.77; 195.181.221.38; 92.14.228.7; 108.5.102.95; 213.91.205.134; \
  87.139.122.48; 104.197.106.159; 2zuxkwr5kwdjtshv.myfritz.net; 94.3.71.25; \
  62.210.169.154; 52.166.122.204; 192.222.248.5; cybaer.dyndns.org; \
  195.181.214.79; 81.56.253.30; 23.88.113.60; 85.255.13.141; 77.81.230.151; \
  orellas.com; 207.154.238.245; 52.174.236.20; v22017074781651445.quicksrv.de; \
  46.36.66.39; 188.226.149.204; 176.94.115.161; 46.36.66.38; \
  ca-node.indokpl.party; 163.172.154.74; 195.181.221.236; 162.243.145.83; \
  52.174.56.251; fr2-node.indokpl.party; 182.163.62.98; 37.110.55.56; \
  23.94.134.161; 13.95.238.122; kpl.notbot.me; kplnode003.ddnss.eu; \
  104.198.173.28; kpl.noip.me; megaman.thican.net; 212.120.80.101; \
  85.255.13.64; 54.213.222.141; 163.172.166.207; 72.93.26.205; 52.233.189.184; \
  185.28.103.187; 219.225.128.5; zdani.szn.dk; 217.26.24.27; 52.0.72.67; \
  195.181.209.245; 142.4.206.15; 178.79.128.235; kplzj1.ddns.net; \
  52.166.252.138; 185.170.113.79; 92.91.199.174; 104.155.56.82; \
  zuqka.duckdns.org; 70.117.244.224; 94.177.196.134; 176.12.25.174; \
  80.211.235.240; 195.181.221.89; 52.174.55.141; 52.233.187.72; \
  23.239.27.64; 109.198.249.241; 216.155.128.10; 94.177.214.120; \
  167.160.180.58; 52.232.126.75; 174.24.246.147; kpl.cryonet.de; \
  217.61.124.69; 13.95.232.139; kplnode.geissweb.de; 62.210.169.244; \
  73.228.64.242; kplsrv.ddns.net; kpl.galeki.com; kpl.result.de; \
  kpl1.frogdog.io; 87.138.221.20; 213.93.29.71; 52.174.102.98; \
  147.32.246.247; 158.69.2.141; 94.177.213.201; 46.36.66.42; \
  fr-node.indokpl.party; 46.36.66.41; 192.157.233.106; 107.210.187.82; \
  46.36.84.123; 13.81.112.232; 87.221.229.144; krs.scripterron.org; \
  212.47.243.151; de016.static.kpl-nodes.net; 23.89.192.88; 51.15.65.127; \
  73.40.166.127; 185.33.145.176; goofoff.mydns.bz; 73.203.43.243; \
  145.53.123.212; 46.36.84.124; 195.181.214.111; de001.dynamic.kpl-nodes.net; \
  zuqka1.duckdns.org; 184.61.104.118; 1.236.48.33; 173.24.226.138; \
  single-chat.at; 40.68.159.71; 217.61.124.100; 94.159.62.14; 52.166.135.114; \
  192.157.241.139; tk.metadns.cx; 54.226.4.180; 75.67.18.255; 23.89.192.98; \
  88.198.67.196; 84.174.151.76; 47.52.106.239; teker.myqnapcloud.com; \
  178.62.231.13; 104.47.151.200; 202.153.220.6; 167.160.180.204; \
  108.161.166.82; 74.98.215.226; 167.160.180.208; 51.15.71.180; \
  167.160.180.206; 203.173.35.32; www.funkymonkey.org; 68.12.182.241; \
  id-node.indokpl.party; 212.237.6.208; enricoip.no-ip.biz; 176.152.209.9; \
  86.241.155.132; 217.168.66.129; node0.forgekpl.com; 40.68.90.255; \
  13.95.93.240; 88.99.225.64; 52.178.37.228; 79.133.35.106; 209.222.98.250; \
  163.172.157.87; 185.33.145.94; 178.69.147.26; 13.94.243.233; 86.142.92.129; \
  72.186.0.69; 23.88.61.53; 109.167.144.141; 13.81.222.46; 166.48.72.41; \
  50.68.88.196; 27.121.134.84; kpl1.testdruif.be; 211.30.17.19; 217.121.42.42; \
  52.174.102.225; 110.22.167.35; 162.243.122.251; 109.230.199.49; \
  kplzj.ddns.net; 136.243.170.247; 167.160.191.196; 119.28.20.120; 13.81.13.3; \
  216.8.180.222; 13.95.218.235; 93.186.253.127; 110.251.158.36; \
  kplpi.duckdns.org; 36.55.242.137; 13.94.244.143; 136.243.170.251; \
  104.129.56.238; 88.91.94.223; 13.81.4.136; 195.181.212.103; 67.237.195.255; \
  145.130.12.232; gayka.no-ip.info; 212.232.49.28; 70.35.207.195; \
  kpl.woll-e.net; 167.160.180.199; 130.211.76.5; 108.214.8.13; \
  phvll7lsuuvlqpfo.myfritz.net; 192.157.241.212; 40.68.155.228; \
  107.161.145.131; 47.90.75.97; 137.74.106.149; 52.166.200.126; 192.3.196.10; \
  krs.kpler.org; 80.98.81.73; prodtz2.dyndns.org; 212.237.13.162; \
  192.157.241.218; 163.172.158.229; 198.211.103.222; 178.33.203.157; \
  dud1401.ddns.net; 85.232.133.168; 195.181.221.185; 52.232.86.205; \
  212.237.22.215; 107.150.18.108; 212.237.23.85; 52.178.68.198; \
  kplnode.duckdns.org; humanoide.thican.net; 217.61.124.157; 77.90.90.76; \
  146.148.77.226; 73.187.9.170; 40.68.218.136; 91.121.83.35; 109.230.199.137; \
  52.174.249.62; bug.airdns.org; 77.90.90.74; 83.249.79.165; kpl8.y.cz; \
  nl-node.indokpl.party; 85.255.1.245; 217.61.123.119; 162.243.242.8; \
  kpl.jelurida.com;

# A list of well known peer addresses / host names, separated by '; '. These
# peers are always kept in connected state.
kpl.wellKnownPeers=

# Known bad peers to be blacklisted.
kpl.knownBlacklistedPeers=

# Default initial peers used for testnet only. Only used if kpl.usePeersDb=true.
# Do not modify. Add custom testnet peers to kpl.testnetPeers instead.
kpl.defaultTestnetPeers=198.105.223.72; 174.140.168.136; 89.212.19.49; \
  52.20.125.165; kpl.noip.me; bug.airdns.org; 13.59.238.199; 5.200.23.15; \
  demo.jelurida.com; 107.170.3.62;

# Well known testnet peers.
kpl.testnetPeers=

# Maximum number of inbound connections.
kpl.maxNumberOfInboundConnections=250

# Maximum number of outbound connections.
kpl.maxNumberOfOutboundConnections=50

# Maintain active connections with at least that many peers.
kpl.maxNumberOfConnectedPublicPeers=20

# Stop adding new peers when number of known peers exceeds that many.
kpl.maxNumberOfKnownPeers=2000

# Stop removing old peers when number of known peers drops below that many.
kpl.minNumberOfKnownPeers=1000

# Peer networking connect timeout for outgoing connections.
kpl.connectTimeout=10000

# Peer networking read timeout for outgoing connections.
kpl.readTimeout=20000

# Peer networking server idle timeout, milliseconds.
kpl.peerServerIdleTimeout=30000

# Use WebSocket connection if supported by the remote peer.
kpl.useWebSockets=true

# WebSocket connection idle timeout (milliseconds).
kpl.webSocketIdleTimeout=900000

# Use the peer hallmark to only connect with peers above the defined push/pull
# hallmark thresholds.
# Disabling hallmark protection also disables weighting of peers by hallmark
# weight, so connecting to any of your peers becomes equally likely.
kpl.enableHallmarkProtection=true

# Hallmark threshold to use when sending data to peers.
kpl.pushThreshold=0

# Hallmark threshold to use when requesting data from peers.
kpl.pullThreshold=0

# Blacklist peers for 600000 milliseconds (i.e. 10 minutes by default).
kpl.blacklistingPeriod=600000

# Consider a new transaction or block sent after 10 peers have received it.
kpl.sendToPeersLimit=10

# Enable the Jetty Denial of Service Filter for the peer networking server.
kpl.enablePeerServerDoSFilter=true

# Compress Http responses for the peer networking server.
kpl.enablePeerServerGZIPFilter=true

# Use testnet, leave set to false unless you are really testing.
# Never unlock your real accounts on testnet! Use separate accounts for testing
# only.
# When using testnet, all custom port settings will be ignored,
# and hardcoded ports of 6874 (peer networking), 6875 (UI) and 6876 (API) will
# be used.
kpl.isTestnet=false

# Save known peers in the database
kpl.savePeers=true

# Set to false to disable use of the peers database and the default initial
# peers. This will not delete saved peers.
kpl.usePeersDb=true

# Set to false to disable getting more peers from the currently connected peers.
# Only useful when debugging and want to limit the peers to those in peersDb or
# wellKnownPeers.
kpl.getMorePeers=true

# Set to true to run offline - do not connect to peers and do not listen for
# incoming peer connections. This is equivalent to setting
# kpl.shareMyAddress=false, kpl.wellKnownPeers=, kpl.testnetPeers= 
# and kpl.usePeersDb=false, and if set to true overrides those properties.
kpl.isOffline=false

# Ignore peer announced addresses. Do not change unless you understand what it
# does.
kpl.ignorePeerAnnouncedAddress=false

# Only allow peer addresses starting with "fc". This is for users of cjdns only,
# do not set if you don't know what that is.
kpl.cjdnsOnly=false

# Do not include exception details when returning error response to peers.
kpl.hideErrorDetails=false



#### API SERVER ####

# Accept http/json API requests.
kpl.enableAPIServer=true

# Hosts from which to allow http/json API requests, if enabled. Set to * to
# allow all. Can also specify networks in CIDR notation, e.g. 192.168.1.0/24.
kpl.allowedBotHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1];

# Port for http/json API requests.
kpl.apiServerPort=7876

# Port for https/json API request. If same as kpl.apiServerPort, the kpl.apiSSL
# setting determines whether SSL is used or not.
kpl.apiServerSSLPort=7876

# Enable UPnP for the API ports.
kpl.enableAPIUPnP=false

# Host interface on which to listen for http/json API request, default localhost
# only. Set to 0.0.0.0 to allow the API server to accept requests from all
# network interfaces, including IPv6.
kpl.apiServerHost=127.0.0.1

# Idle timeout for http/json API request connections, milliseconds.
kpl.apiServerIdleTimeout=30000

# Directory with html and javascript files for the new client UI, and admin
# tools utilizing the http/json API.
kpl.apiResourceBase=./html/www

# Default page for the API server.
kpl.apiWelcomeFile=index.html

# Java API documentation directory, optional.
kpl.javadocResourceBase=./html/doc

# Enable Cross Origin Filter for the API server.
kpl.apiServerCORS=true

# Add X-Frame-Options SAMEORIGIN header to every response as a protection
# against clickjacking.
kpl.apiFrameOptionsSameOrigin=true

# Enable SSL for the API server (also need to set kpl.keyStorePath and
# kpl.keyStorePassword).
# Non-SSL connections will be disabled if kpl.apiServerSSLPort is equal to
# kpl.apiServerPort.
# Otherwise, both SSL and non-SSL connections will be accepted.
kpl.apiSSL=false

# Enabled cipher suites for the API server when SSL is enabled. The list below
# is an example to use for choosing AES-GCM instead of AES-CBC, not the default.
#kpl.apiSSLCiphers=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384; \
#  TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256; \
#  TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384; \
#  TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256;

# Enforce requests that require POST to only be accepted when submitted as POST.
kpl.apiServerEnforcePOST=true

# Compress Http responses for the API server. If not set, enabled for openAPI
# nodes only.
#kpl.enableAPIServerGZIPFilter=false

# Password that should be provided when executing protected (administrative) API
# requests.
# Please choose a decent password here. Preferably, use a password generator.
# Password protection is disabled and password is not needed when the API server
# only listens on the localhost interface, i.e. when 
# kpl.apiServerHost=127.0.0.1.
kpl.adminPassword=

# Set to true to disable the password protection for admin API requests even
# when API server is publicly accessible. Not recommended.
kpl.disableAdminPassword=false

# The maximum number of records possible to retrieve with a single request. This
# restriction is not enforced if the admin password is provided, or is not
# needed (disabled or listening on localhost only).
kpl.maxAPIRecords=100

# API event registration timeout (seconds). The timeout is reset each time an
# event wait request is received from the application. The minimum value is 15
# seconds.
kpl.apiEventTimeout=300

# Maximum number of applications with active event registrations.
kpl.apiMaxEventUsers=32

# Maximum file size accepted for upload, in bytes. Default and minimum value
# accepted is 43008 (42 kbytes).
#kpl.maxUploadFileSize=0

# If an unsigned transaction is submitted with insufficient fee, set the fee to
# the minimum fee calculated for this transaction instead, as if feeNQT=0 has
# been specified. Default is false.
kpl.correctInvalidFees=false

# APIs to disable, as a semicolon separated list.
kpl.disabledAPIs=

# Groups of APIs to disable, as a semicolon separated list of API tag names.
kpl.disabledAPITags=

# Enables the API proxy. Requests are forwarded to a randomly chosen peer
# providing openAPI service. Outgoing transactions are signed locally - the
# secret phrase is never sent to the remote peer.
# Used by light clients or when the blockchain is not yet downloaded.
# For openAPI nodes, the API proxy remains disabled, ignoring this setting.
# For light clients, the API proxy is always enabled, ignoring this setting.
kpl.enableAPIProxy=true

# Operate as light client. Blockchain is not downloaded and processed, instead
# the API proxy is used (see kpl.enableAPIProxy).
# Light clients are not advertised as providing openAPI service even if they do
# have their API publicly accessible.
kpl.isLightClient=false

# If set, all requests will be forwarded to the specified openAPI peer
kpl.forceAPIProxyServerURL=

# The period remote API servers are blacklisted when not functioning (in
# milliseconds).
# The API proxy blacklisting mechanism is in addition to the peers blacklisting
# - if a peer is blacklisted, it won't be used by the proxy, but it is possible
# that a peer is online and correctly functioning, and only its open API is
# blocked (e.g. by firewall)
kpl.apiProxyBlacklistingPeriod=1800000

# When the API server is running behind a proxy, use this header to obtain the
# remote host for which the API request was forwarded. Currently only used for
# keeping track of and blacklisting hosts that try to brute force the API admin
# password.
#kpl.forwardedForHeader=X-Forwarded-For


#### OLD KRS USER INTERFACE ####

# Enable the deprecated KRS user interface.
kpl.enableUIServer=false

# Hosts from which to allow KRS user interface requests, if enabled. Set to * to
# allow all.
kpl.allowedUserHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1];

# Port for KRS user interface server.
kpl.uiServerPort=7875

# Host interface for KRS user interface server, default localhost only.
# Set to 0.0.0.0 to allow the UI to be accessed on all network interfaces.
kpl.uiServerHost=127.0.0.1

# Idle timeout for KRS user interface server, milliseconds.
kpl.uiServerIdleTimeout=30000

# Directory with html and javascript files for the KRS client user interface.
kpl.uiResourceBase=html/krs

# Enable Cross Origin Filter for KRS user interface server.
kpl.uiServerCORS=false

# Enable SSL for the KRS user interface (also need to set kpl.keyStorePath and
# kpl.keyStorePassword).
kpl.uiSSL=false

# Enforce requests that require POST to only be accepted when submitted as POST.
kpl.uiServerEnforcePOST=true



#### DEBUGGING ####

# Log file, will be overwritten at every restart.
#kpl.log=kpl.log
# The log file is now specified in logging.properties.

# Enable debug log output.
#kpl.debug=false
# Debug logging is now specified in logging properties.

# Include caller traceback in log messages.
kpl.enableLogTraceback=false

# Enable logging of exception stack traces.
kpl.enableStackTraces=true

# Enable logging of Jetty messages.
#kpl.debugJetty=false
# Jetty logging is now specified in logging properties.

# Used for debugging peer to peer communications.
kpl.communicationLoggingMask=0

# Track balances of the following accounts and related events for debugging
# purposes.
kpl.debugTraceAccounts=

# File name for logging tracked account balances.
kpl.debugTraceLog=kpl-trace.csv

# Separator character for trace log.
kpl.debugTraceSeparator=\t

# Quote character for trace log.
kpl.debugTraceQuote="

# Log changes to unconfirmed balances.
kpl.debugLogUnconfirmed=false

# Log account balance calculations for FXT snapshot for the following account.
#kpl.logFxtBalance=KPL-RRCQ-N5SL-UX37-G9Y9W



#### DATABASE ####

# Database connection JDBC url, see the H2 documentation for possible
# customizations.
# Append ;AUTO_SERVER=TRUE to enable automatic mixed mode access.
# The kpl_db folder is expected to be in the current working directory, will be
# created if missing.
# kpl.dbUrl=jdbc:h2:./kpl_db/kpl;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE;MV_STORE=FALSE

# Database connection JDBC url to use with the test network, if isTestnet=true.
# kpl.testDbUrl=jdbc:h2:./kpl_test_db/kpl;DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE;MV_STORE=FALSE

kpl.dbType=h2
kpl.testDbType=h2

kpl.dbDir=./kpl_db/kpl
kpl.testDbDir=./kpl_test_db/kpl

kpl.dbParams=DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE;MV_STORE=FALSE
kpl.testDbParams=DB_CLOSE_ON_EXIT=FALSE;MVCC=TRUE;MV_STORE=FALSE

kpl.dbUsername=sa
kpl.testDbUsername=sa

kpl.dbPassword=sa
kpl.testDbPassword=sa

# Database connection timeout in seconds.
kpl.dbLoginTimeout=70

# Database default lock timeout in seconds.
kpl.dbDefaultLockTimeout=60

# Database max memory rows limit.
kpl.dbMaxMemoryRows=1000000

# Maximum simultaneous database connections.
kpl.maxDbConnections=30

# The memory allocated to database cache, in kB.
# If set to 0, the cache size varies from a minimum of 16MB for heap sizes 160MB
# or less, to a maximum of 256MB for heap sizes 640MB or higher.
kpl.dbCacheKB=0

# Enable trimming of derived objects tables. Disabling this will significantly
# worsen performance.
kpl.trimDerivedTables=true

# If trimming is enabled, maintain enough previous height records to allow
# rollback of at least that many blocks. Cannot be set to less than 720.
# After increasing this value, a full re-scan also needs to be done in order for
# the previously trimmed records to be re-created and preserved.
kpl.maxRollback=800

# When trimming is enabled, it is run every kpl.trimFrequency blocks.
kpl.trimFrequency=1000

# Override the lifetime of prunable data to keep them longer, value in seconds.
# Set to -1 to disable pruning. Has no effect if set to less then the minimum
# required lifetime of two weeks (1209600 seconds) on mainnet, or 24 hours
# (86400 seconds) on testnet. Default is 90 days.
kpl.maxPrunableLifetime=7776000

# Include expired prunable parts if requested as long as it is still available.
# In order to provide the PRUNABLE peer service, kpl.maxPrunableLifetime must
# be -1 and kpl.includeExpiredPrunable must be true.  The PRUNABLE service means
# the peer will provide expired prunable data to other peers when requested.
kpl.includeExpiredPrunable=true

# Threshold for logging database statements (milliseconds).
kpl.statementLogThreshold=10000

# Threshold for logging database transactions (milliseconds).
kpl.transactionLogThreshold=15000

# Log the average transaction time after this many minutes.
kpl.transactionLogInterval=15

# Public keys are by default cached, which consumes 10-15 MB of memory.
kpl.enablePublicKeyCache=true

# When trimming or pruning derived tables, do a commit after that many records
# are processed. Default if not set is Integer.MAX_VALUE which prevents such
# intermediate commits.
kpl.batchCommitSize=100



#### Blocks and transactions ####

# Delay generation of next block in order to accumulate more transactions in it.
# Waiting for much more than 15 s is not useful as transactions are allowed at
# most 15 s timestamp difference from the block they can be included in.
kpl.forgingDelay=20

# Generate and submit the next block before its hit time in response to
# receiving a lower difficulty block. Submitting the block more than 15 s before
# its time however will lead to its rejection.
kpl.forgingSpeedup=3

# Maximum number of forging accounts allowed on this node.
kpl.maxNumberOfForgers=100

# Verify batches of blocks downloaded from a single peer with that many other
# peers.
kpl.numberOfForkConfirmations=2
kpl.testnetNumberOfForkConfirmations=1

# Enable re-broadcasting of new transactions until they are received back from
# at least one peer, or found in the blockchain. This feature can optionally be
# disabled, to avoid the risk of revealing that this node is the submitter of
# such re-broadcasted new transactions.
kpl.enableTransactionRebroadcasting=true

# Do not allow the number of unconfirmed transactions in memory to exceed this
# value. If exceeded, the same transaction ordering as when choosing which
# transactions to include in a forged block is used to decide which to keep in
# the unconfirmed pool.
# Set to 0 or negative for no limit.
kpl.maxUnconfirmedTransactions=2000

# Maximum number of account monitors allowed on this node
kpl.maxNumberOfMonitors=100



#### DESKTOP WALLET ####

# When using desktop mode and when user interface is available. Launch the
# wallet inside a desktop frame when the node is started.
kpl.launchDesktopApplication=true

# The default account is used, to automatically login to the wallet during
# startup.
kpl.defaultDesktopAccount=



#### ACCOUNT LEDGER ####

# Address of accounts (in RS format) to track balance changes in the ledger
# table, separated by ';'.
# Set to * to track changes for all accounts. Specify no accounts to disable
# the account ledger.
kpl.ledgerAccounts=*

# Specify 0 to not log unconfirmed changes, 1 to log unconfirmed changes or 2 to
# log only unconfirmed changes.
kpl.ledgerLogUnconfirmed=2

# Specify the number of blocks to keep when trimming the account ledger table.
# A value of zero will cause all blocks to be kept.
kpl.ledgerTrimKeep=30000



#### VOTING SYSTEM ####

# If disabled, polls are not processed at finish height and results are not
# stored in the database. When requested, poll results will be calculated
# on-the-fly, if the votes are still available.
kpl.processPolls=true



#### MINT ####

# Address of the KPL server to which the mint worker submits its transactions
# (default: localhost).
kpl.mint.serverAddress=

# Use Https when connecting to the server. Note that mint worker accepts any SSL
# certificate as valid, without checking hostname or certificate authority,
# therefore this will not protect you against a man-in-the-middle attack when
# submitting mint transactions.
kpl.mint.useHttps=false

# Specify a mintable currency code.
kpl.mint.currencyCode=

# Secret phrase for the minting account, this secret phrase is sent to the host
# specified by kpl.mint.serverAddress therefore do not specify secret phrase of
# an account with lots of funds.
kpl.mint.secretPhrase=

# Number of units to mint per transaction.
# The minting difficulty grows linearly with the number of units per mint.
kpl.mint.unitsPerMint=1

# The initial nonce used for minting.
# Set to 0 to start with a random nonce.
kpl.mint.initialNonce=0

# Number of concurrency threads used for minting.
# Set to 0 allocate one thread per processor core.
kpl.mint.threadPoolSize=0

# When set to false mint transactions are not submitted when a hash is solved.
# Set this value to true to perform actual minting.
kpl.mint.isSubmitted=false

# When set to false the mint worker will resume operation even in case a mint
# transaction has returned an error response.
kpl.mint.stopOnError=false



#### Passphrase Recovery Utility ####

# Specify the approximate passphrase that you remember
# recoveryWildcard=hope peac* happen *ouch easy pretend worthless talk them indeed wheel state

# Specify the positions inside the passphrase in which you like to try various options
# The first character position is 1
# recoveryPositions=10,19

# Specify the possible values to use for replacing the unknown positions, unicode characters
# can be specified using the \u notation
# recoveryDictionary=t\u2019ne



#### Shuffling ####

# Delete finished shufflings and their participants. When enabled, records of
# completed shufflings and their participants are deleted after the shuffling
# has finished, which will improve performance by keeping their tables smaller.
kpl.deleteFinishedShufflings=false

# Use strong secure random implementation. As this can block on unix systems,
# it is disabled by default. Enable only if using haveged or other entropy
# source that makes reading from /dev/random fast, otherwise server-side
# encryption will be unusably slow and cause coin shufflings to fail.
kpl.useStrongSecureRandom=false

# Maximum number of shufflers allowed to run at the same time on this node.
kpl.maxNumberOfShufflers=100



#### JETTY ####

# Settings for the Jetty Denial Of Service Filter, used for the peer networking
# server only.
kpl.peerServerDoSFilter.maxRequestsPerSec=30
kpl.peerServerDoSFilter.delayMs=1000
kpl.peerServerDoSFilter.maxRequestMs=300000

# keystore file and password, required if uiSSL or apiSSL are enabled.
kpl.keyStorePath=keystore
kpl.keyStorePassword=password

# keystore type defaults to JKS can be changed to PKCS12.
kpl.keyStoreType=JKS



#### Developers only ####

# Force re-validation of blocks and transaction at start.
kpl.forceValidate=false

# Force re-build of derived objects tables at start.
kpl.forceScan=false

# Scale epoch time for faster forging. Only works when offline.
# kpl.timeMultiplier=1

# Enable the following AddOns, which must also be on the classpath, e.g. placed
# in the addons/classes or addons/lib directory. List of class names, separated
# by semicolon.
#kpl.addOns=kpl.addons.Demo; kpl.addons.AfterStart; kpl.addons.BeforeShutdown

# Demo after start and before shutdown scripts
#kpl.afterStartScript=../bin/afterStart.sh
#kpl.beforeShutdownScript=../bin/beforeShutdown.sh

# KRS normally sets a customized security policy when AddOns are used.
# Set to true to use the default security manager when AddOns are used.
kpl.disableSecurityPolicy=false

# Display a custom warning text on the login screen in the client UI.
#kpl.customLoginWarning=

# KRS version.
kpl.version=1.11.9

